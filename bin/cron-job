#! /bin/bash
# (c) Copyright 2020 - James Stevens

set -x 

base="$(dirname $(dirname ${0}))"
if test "${base}" = "."; then base="$(pwd)"; fi

if test -z "${base}"
	then
		echo "ERROR: Finding directory base"
		exit 1
	fi

. ${base}/config



function handshake_header()
{
	echo ". 86400  IN SOA . . ${1} 1800 900 604800 86400"
	echo ". 518400 IN NS ."
	echo ". 518400 IN A 127.0.0.1"
}


digcmd="dig +nocmd +nocomments +nostats"

rm -f ${base}/tmp/*


icann_old_soa=0
newest_icann=$(ls ${base}/zones/icann* 2>/dev/null | tail -1)
if test "${newest_icann}" -a -f "${newest_icann}"
	then
		icann_old_soa="$(awk '{ if (($1==".")&&($4=="SOA")) { print $7; exit(0) } }' ${newest_icann})"
	fi

icann_now_soa="$(${digcmd} +norec +short @${icann_root_dns} . soa | awk '{ print $3 }')"

resign="N"

now="$(date +%Y%m%d_%H%M%S)"


if test ${icann_now_soa} -gt ${icann_old_soa}
	then
		tmp=$(mktemp ${base}/tmp/icann_XXXXXX)
		${digcmd} @${icann_root_dns} . axfr | tr $'\t' ' ' | awk 'BEGIN {
			block["RRSIG"] = "Y"; block["NSEC"] = "Y";
			block["NSEC3"] = "Y"; block["DNSKEY"] = "Y";
			block["NSEC3PARAM"] = "Y"; } 
			{ 
			if (block[$4] != "Y") print 
			}' > ${tmp}

		newest_icann="${base}/zones/icann_${now}.txt"
		mv ${tmp} ${newest_icann}
		resign="Y"
	fi




handshake_old_soa=0
newest_handshake=$(ls ${base}/zones/handshake* 2>/dev/null | tail -1)
if test "${newest_handshake}" -a -f "${newest_handshake}"
	then
		handshake_old_soa="$(awk '{ if (($1==".")&&($4=="SOA")) { print $7; exit(0) } }' ${newest_handshake})"
	fi

handshake_now_soa="$(${digcmd} +norec +short @${handshake_root_dns} . soa | awk '{ print $3 }')"


if test ${handshake_now_soa} -gt ${handshake_old_soa}
	then
		tmp=$(mktemp ${base}/tmp/handshake_XXXXXX)
		handshake_header "${handshake_now_soa}" > "${tmp}~"

		${hsd_rpc} dumpzone ${tmp}

		x=0
		while ! test -s ${tmp}
			do
				x=$[${x}+1]
				if test ${x} -gt 180
					then
						rm -f ${tmp}
						echo "ERROR: RPC dumpzone to ${tmp} Failed"
						exit 1
					fi
				sleep 1
			done

		newest_handshake="${base}/zones/handshake_${now}.txt"
		mv ${tmp} ${newest_handshake}
		resign="Y"
	fi






# ncpu=$(lscpu | awk '/^CPU\(s\)/ { print $NF }')
# salt=$(hexdump -n 5 -e '4/4 "%02X" 1 "\n"' /dev/random | tr -d ' ')



echo "----> ${resign} ${newest_handshake} ${newest_icann}"


if test "${priority_icann}" = "Y"
	then
		file="${newest_handshake}"
		keep="${newest_icann}"
		dups="Handshake"
	else
		keep="${newest_handshake}"
		file="${newest_icann}"
		dups="ICANN"
	fi



{
handshake_header "${handshake_now_soa}"

grep -v '^. ' ${keep}

awk 'BEGIN {
	keep="'"${keep}"'"
	dups="'"${base}"'/tmp/dups"

	while((getline < keep)==1) in_keep[$1]="Y"
	in_keep["."] = "Y"
	}
	{
		if (in_keep[$1]!="Y") print
		else {
			if ($1 != ".") print $0 > dups
			}
	}' ${file}

} > ${base}/tmp/ROOT


if test -s tmp/dups
	then
		awk '{ print "'"${dups}"' Duplicate removed:",$0 }' tmp/dups
		rm -f tmp/dups
	fi


. ${base}/etc/nsec3.salt

cd ${base}/tmp
dnssec-signzone -o . -t -R -S -A -H 5 -3 ${nsec3_salt} -K ../keys ROOT
cd ${base}


cp tmp/ROOT.signed named/zones/
rndc -c ${base}/etc/rndc.conf reload . in root

rm tmp/*
