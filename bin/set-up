#! /bin/bash
# (c) Copyright 2020 - James Stevens

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

base="$(dirname $(dirname ${0}))"
if test "${base}" = "."; then base="$(pwd)"; fi

. ${base}/config

if ! test $(id -u) = 0
	then	
		echo "Usage: sudo bin/set-up"
		exit 1
	fi

umount ${base}/named/dev/log 2>/dev/null
killall -q named-icann-slave named-handshake-bridge merge_root
sleep 2
while killall -q -9 named-icann-slave named-handshake-bridge merge_root
	do
		sleep 1
	done

dirs="named icann etc"
rm -rf ${dirs}

keys="named/keys"
mkdir -p ${dirs}
mkdir -p named/dev named/etc named/var named/var/named \
	named/data named/data/zones named/data/tmp ${keys}

mkdir -p icann/etc icann/var icann/var/named icann/zones

cp -a /dev/random /dev/urandom /dev/null /dev/zero named/dev
cp -a /dev/random /dev/urandom /dev/null /dev/zero icann/dev

chown root:nobody ${keys}
chmod 750 ${keys}

chmod 770 named/data/zones icann/zones
chgrp $(id -g nobody) named/data/zones icann/zones
chown nobody: named/var/named icann/var/named

touch named/dev/log
mount -o bind /dev/log ${base}/named/dev/log


if test -d key-store
    then
		cp -a key-store.* ${keys}
	else
		dnssec-keygen -K ${keys} -a "${signing_algorithm}" -n ZONE -L 86400 -f KSK -3 .
		dnssec-keygen -K ${keys} -a "${signing_algorithm}" -n ZONE -L 86400 -3 .
	fi
chown root:nobody ${keys}/*
chmod 440 ${keys}/*

dnssec-dsfromkey -12 -a SHA-384 $(grep -l ' DNSKEY 257 ' ${keys}/*.key) > dsset-.

dnssec-dsfromkey -2 $(grep -l ' DNSKEY 257 ' ${keys}/*.key) | awk '{
	printf "trust-anchors { . static-ds %d %d %d \"%s\"; };\n",$4,$5,$6,$7 }' > named/etc/trust-anchors.inc

# `bind` is a fussy bitch, it won't listen on an address unless its assigned :(
for x in 1 2 3 5
do
	addr="${bind_local_prefix}.${x}"
	if ! ip addr show lo | grep -q "inet ${addr}/"
		then
			ip addr add ${addr}/8 dev lo
		fi
done


awk '/ 257 / { $8="\"" _ $8;
	printf "trust-anchors {\n\t\".\" static-key %s\";\n};\n",substr($0,index($0," 257 ")) 
	}' ${keys}/*.key > named/etc/trust-anchors.inc

chmod 444 named/etc/trust-anchors.inc


export signed_addr="${bind_local_prefix}.2"
export signed_all="${signed_addr}; ${bind_signed_addr}"
export merged_addr="${bind_local_prefix}.5"
export merged_all="${merged_addr}"
export recursive_all="${bind_local_prefix}.1; ${bind_recusive_addr}"
export mirror_all="${bind_local_prefix}.3; ${bind_mirror_addr}"
export slave_masters bind_signed_addr

awk '{ 
	for (a in ENVIRON) gsub("{{" _ a _ "}}",ENVIRON[a]);
	print
	}' template_named.conf > named/etc/named.conf

awk '{ 
	for (a in ENVIRON) gsub("{{" _ a _ "}}",ENVIRON[a]);
	print
	}' template_icann.conf > icann/etc/named.conf



rndc-confgen -s ${merged_addr} > etc/rndc.conf
awk '/^#/&&!/named.conf/&&!/of rndc.conf/ { 
	if ($2=="allow") $4="127.0.0.0/8;"
	print substr($0,3) 
	}' etc/rndc.conf > named/etc/rndc.inc
chmod 444 named/etc/rndc.inc

ln -fns $(which named) ${base}/bin/named-handshake-bridge
ln -fns $(which named) ${base}/bin/named-icann-slave

if ! named-checkconf -t ${base}/named -c /etc/named.conf
	then
		echo "ERROR: named config failed validation"
		exit 1
	fi
if ! named-checkconf -t ${base}/icann -c /etc/named.conf
	then
		echo "ERROR: icann config failed validation"
		exit 1
	fi

# Create merged ROOT for the first time so bind will start-up
${base}/bin/merge_root -i "${hostname}" -B named/data/zones/ROOT.merged


# Get initial ICANN ROOT from f-root
txt="icann/zones/icann.txt"
db="icann/zones/icann.db"
dig @192.5.5.241 . axfr > ${txt}
named-compilezone -i local-sibling -k ignore -F raw -o - . ${txt} > ${db}
chown nobody: ${db}
rm -f ${txt}


echo "Starting bind"
${base}/bin/named-handshake-bridge -4 -t ${base}/named/ -u nobody -c /etc/named.conf
${base}/bin/named-icann-slave -4 -t ${base}/icann/ -u nobody -c /etc/named.conf

echo "Config NSEC3"
rndc -c etc/rndc.conf signing -nsec3param 1 1 1 00 .
sleep 1
while rndc -c etc/rndc.conf signing -list . | grep -q "Creating NSEC3 chain"
	do
		sleep 1
	done

echo "Saving"
rndc -c etc/rndc.conf sync -clean
while test -f named/data/zones/ROOT.merged.signed.jnl
	do
		sleep 1
	done


echo "Stop"
rndc -c etc/rndc.conf stop
while ps ax | grep -q '[n]amed-handshake-bridge'
	do
		sleep 1
	done

echo "Restart"
${base}/bin/named-handshake-bridge -4 -t ${base}/named/ -u nobody -c /etc/named.conf
sleep 1
while ! test -f named/data/zones/ROOT.merged.signed.jnl
	do
		sleep 1
	done

echo "Save"
rndc -c etc/rndc.conf sync -clean
while test -f named/data/zones/ROOT.merged.signed.jnl
	do
		sleep 1
	done

echo "Stop"
rndc -c etc/rndc.conf stop
while ps ax | grep -q '[n]amed-handshake-bridge'
	do
		sleep 1
	done

echo "Restart"
${base}/bin/named-handshake-bridge -4 -t ${base}/named/ -u nobody -c /etc/named.conf
sleep 2


echo "Starting merge process for the first time - this may take 3 to 4 hrs to complete siging"
${base}/bin/run_merge_root -y 0
